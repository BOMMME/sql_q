-- 1. 사원들의 이름, 부서번호, 부서이름을 출력하라.

--ORACLE
SELECT E.ENAME, E.DEPTNO, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;

-- ANSI
SELECT ENAME, DEPTNO, DNAME
FROM EMP JOIN DEPT USING (DEPTNO);

-- 2. DALLAS에서 근무하는 사원의 이름, 직위, 부서번호, 부서이름을
-- 출력하라.

--ORACLE
SELECT E.ENAME, E.JOB, E.DEPTNO, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND D.LOC = 'DALLAS';

--ANSI
SELECT ENAME, JOB, DEPTNO, DNAME
FROM EMP JOIN DEPT USING (DEPTNO)
WHERE LOC = 'DALLAS';



-- 3. 이름에 'A'가 들어가는 사원들의 이름과 부서이름을 출력하라.

--ORACLE
SELECT E.ENAME, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND E.ENAME LIKE '%A%';

--ANSI
SELECT ENAME, DNAME
FROM EMP JOIN DEPT USING (DEPTNO)
WHERE ENAME LIKE '%A%';

 

-- 4. 사원이름과 그 사원이 속한 부서의 부서명, 그리고 월급을 
--출력하는데 월급이 3000이상인 사원을 출력하라.

--ORACLE
SELECT E.ENAME, D.DNAME, E.SAL
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND SAL >= 3000;

--ANSI
SELECT ENAME, DNAME, SAL
FROM EMP JOIN DEPT USING (DEPTNO)
WHERE SAL >= 3000;

 


-- 5. 직위가 'SALESMAN'인 사원들의 직위와 그 사원이름, 그리고
-- 그 사원이 속한 부서 이름을 출력하라.

--ORACLE
SELECT E.JOB, E.ENAME, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND E.JOB = 'SALESMAN';

--ANSI
SELECT JOB, ENAME, DNAME
FROM EMP JOIN DEPT USING (DEPTNO)
WHERE JOB = 'SALESMAN';

 

-- 6. 커미션이 책정된 사원들의 사원번호, 이름, 연봉, 연봉+커미션,
-- 급여등급을 출력하되, 각각의 컬럼명을 '사원번호', '사원이름',
-- '연봉','실급여', '급여등급'으로 하여 출력하라.

--ORACLE
SELECT E.EMPNO "사원번호", E.ENAME "사원이름", E.SAL"연봉", 
E.SAL + E.COMM "실급여", S.GRADE "급여등급"
FROM EMP E, SALGRADE S
WHERE E.SAL + E.COMM BETWEEN S.LOSAL AND S.HISAL AND E.COMM IS NOT NULL;


--ANSI
SELECT EMPNO "사원번호", ENAME "사원이름", SAL"연봉", 
SAL + COMM "실급여", GRADE "급여등급"
FROM EMP JOIN SALGRADE ON SAL + COMM BETWEEN LOSAL AND HISAL
WHERE COMM IS NOT NULL;


-- 7. 부서번호가 10번인 사원들의 부서번호, 부서이름, 사원이름,
-- 월급, 급여등급을 출력하라.

--ORACLE
SELECT D.DEPTNO, D.DNAME, E.ENAME, E.SAL, S.GRADE
FROM EMP E, DEPT D, SALGRADE S
WHERE E.DEPTNO = D.DEPTNO AND E.SAL BETWEEN S.LOSAL AND S.HISAL AND E.DEPTNO = 10;

--ANSI
SELECT DEPTNO, DNAME, ENAME, SAL, GRADE
FROM EMP JOIN DEPT USING(DEPTNO) JOIN SALGRADE ON SAL BETWEEN LOSAL AND HISAL
WHERE DEPTNO = 10;

  

-- 8. 부서번호가 10번, 20번인 사원들의 부서번호, 부서이름, 
-- 사원이름, 월급, 급여등급을 출력하라. 그리고 그 출력된 
-- 결과물을 부서번호가 낮은 순으로, 월급이 높은 순으로 
-- 정렬하라.

--ORACLE
SELECT D.DEPTNO, D.DNAME, E.ENAME, E.SAL, S.GRADE
FROM EMP E, DEPT D, SALGRADE S
WHERE E.DEPTNO = D.DEPTNO AND E.SAL BETWEEN S.LOSAL AND S.HISAL AND E.DEPTNO IN (10, 20)
ORDER BY 1, 4 DESC;

#조건 2개이상이면 = 안되고 IN 으로 하기
=은 조건 한개
IN 은 2개이상 () 으로 묶기

--ANSI 
SELECT DEPTNO, DNAME, ENAME, SAL, GRADE
FROM EMP JOIN DEPT USING(DEPTNO) JOIN SALGRADE ON SAL BETWEEN LOSAL AND HISAL
WHERE DEPTNO IN (10, 20)
ORDER BY 1, 4 DESC;
 #(1,4) 는 안됨


-- 9. 사원번호와 사원이름, 그리고 그 사원을 관리하는 관리자의 
-- 사원번호와 사원이름을 출력하되 각각의 컬럼명을 '사원번호',
-- '사원이름', '관리자번호', '관리자이름'으로 하여 출력하라.

--ORACLE
SELECT E.EMPNO "사원번호", E.ENAME "사원이름", M.EMPNO "관리자번호", M.ENAME "관리자 이름"
FROM EMP E, EMP M
WHERE E.MGR = M.EMPNO;

 
--ANSI
SELECT E.EMPNO "사원번호", E.ENAME "사원이름", M.EMPNO "관리자번호", M.ENAME "관리자 이름"
FROM EMP E JOIN EMP M ON E.MGR = M.EMPNO;

 
-10 -자신의 관리자보다 먼저 입사한 모든 사원의 이름 및 입사일을 해당 --관리자의 이름 및 입사일과 
    함게 표시하고 열 이름을 각각
 --EMPLOYEE,EMPHIREDATE,MANAGER,MGRHIREDATE로 저장한다.

 --ORACLE
SELECT E.ENAME "EMPLOYEE", E.HIREDATE "EMPHIREDATE", 
M.ENAME "MANAGER", M.HIREDATE "MGRHIREDATE"
FROM EMP E, EMP M
WHERE E.MGR = M.EMPNO AND E.HIREDATE < M.HIREDATE;


--ANSI
SELECT E.ENAME "EMPLOYEE", E.HIREDATE "EMPHIREDATE", 
M.ENAME "MANAGER", M.HIREDATE "MGRHIREDATE"
FROM EMP E JOIN EMP M ON E.MGR = M.EMPNO
WHERE E.HIREDATE < M.HIREDATE;
 


--11해당 부서의 모든 사원에 대한 부서 이름, 위치, 사원 수 및 평균 급여를 --표시하는 정의를 작성한다. 
--열 이름을 각각 DNAME,LOC,NUMBER OF PEOPLE,SALARY로 한다.

--ORACLE
SELECT E.ENAME "사원이름", D.DNAME "DNAME", D.LOC "LOC", COUNT(*) OVER() "NUMBER OF PEOPLE",
AVG(SAL) OVER() "SALARY"
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;

--ANSI
SELECT ENAME "사원이름", DNAME "DNAME", LOC "LOC", COUNT(*) OVER() "NUMBER OF PEOPLE",
AVG(SAL) OVER() "SALARY"
FROM EMP JOIN DEPT USING (DEPTNO);

















 
